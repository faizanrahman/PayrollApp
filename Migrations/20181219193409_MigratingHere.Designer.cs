// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayrollApp.Data;

namespace PayrollApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181219193409_MigratingHere")]
    partial class MigratingHere
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("departmentName");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("PayrollApp.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("JobTitle");

                    b.HasKey("JobId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("PayrollApp.Models.PayRoll", b =>
                {
                    b.Property<int>("PayrollId")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Deductions");

                    b.Property<float>("GrossPay");

                    b.Property<float>("NetPay");

                    b.Property<DateTime>("PayDate");

                    b.Property<int>("UserId");

                    b.Property<DateTime>("endDate");

                    b.Property<DateTime>("startDate");

                    b.HasKey("PayrollId");

                    b.HasIndex("UserId");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("PayrollApp.Models.Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Amount");

                    b.Property<int>("JobId");

                    b.HasKey("SalaryId");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("PayrollApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DepartmentId");

                    b.Property<int>("JobId");

                    b.Property<int>("admin")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<DateTime>("createdAt");

                    b.Property<DateTime>("dob");

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<int>("exemptions");

                    b.Property<string>("firstName")
                        .IsRequired();

                    b.Property<string>("lastName")
                        .IsRequired();

                    b.Property<string>("password")
                        .IsRequired();

                    b.Property<DateTime>("updatedAt");

                    b.HasKey("UserId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PayrollApp.Models.PayRoll", b =>
                {
                    b.HasOne("PayrollApp.Models.User", "employee")
                        .WithMany("payRolls")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PayrollApp.Models.Salary", b =>
                {
                    b.HasOne("PayrollApp.Models.Job", "JobTitle")
                        .WithOne("salary")
                        .HasForeignKey("PayrollApp.Models.Salary", "JobId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PayrollApp.Models.User", b =>
                {
                    b.HasOne("Department", "department")
                        .WithMany("employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PayrollApp.Models.Job", "Position")
                        .WithMany("employees")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
